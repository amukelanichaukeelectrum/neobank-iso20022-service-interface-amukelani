<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>io.electrum</groupId>
  <artifactId>neobank-iso20022-service-interface</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0</version>
  <name>neobank-service-interface</name>

  <properties>
    <jacoco.skip>false</jacoco.skip> <!-- skip code coverage unless maven is run with -Djacoco.skip=false -->
    <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>


    <service-interface-base-version>3.44.0</service-interface-base-version>
    <electrum.dependency.artifactory-maven-plugin.version>3.4.0
    </electrum.dependency.artifactory-maven-plugin.version>
    <mvn-openapi-generator-version>5.1.0</mvn-openapi-generator-version>
    <electrum-openapi-generator-version>4.1.0</electrum-openapi-generator-version>
    <javax-servlet-api-version>3.1.0</javax-servlet-api-version>
    <testng-version>7.0.0</testng-version>
    <maven-compiler-version>3.8.1</maven-compiler-version>
    <jetty-version>9.4.41.v20210516</jetty-version>
    <electrum.dependency.el.version>2.2.6</electrum.dependency.el.version>
    <jackson-datatype-version>2.13.3</jackson-datatype-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson-datatype-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-datatype-version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.el</artifactId>
      <version>${electrum.dependency.el.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Add the service-interface-base dependency. TODO-->

    <dependency>
      <groupId>io.electrum</groupId>
      <artifactId>service-interface-base</artifactId>
      <version>${service-interface-base-version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.electrum</groupId>
      <artifactId>electrum-openapi-generator</artifactId>
      <version>${electrum-openapi-generator-version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Add the Electrum OpenAPI generator dependency. TODO-->
  </dependencies>

  <build>
    <plugins>
      <!-- Maven compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <release>11</release>
        </configuration>
      </plugin>
      <!-- Maven Javadoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <source>11</source>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--Maven artifactory, jfrog -->
      <plugin>
        <groupId>org.jfrog.buildinfo</groupId>
        <artifactId>artifactory-maven-plugin</artifactId>
        <version>${electrum.dependency.artifactory-maven-plugin.version}</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>build-info</id>
            <goals>
              <goal>publish</goal>
            </goals>
            <configuration>
              <publisher>
                <!--suppress UnresolvedMavenProperty -->
                <contextUrl>${artifactory-url}/</contextUrl>
                <!--suppress UnresolvedMavenProperty -->
                <username>${artifactory-username}</username>
                <!--suppress UnresolvedMavenProperty -->
                <password>${artifactory-password}</password>
                <repoKey>libs-release-local</repoKey>
                <snapshotRepoKey>libs-snapshot-local</snapshotRepoKey>
              </publisher>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Open API -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${mvn-openapi-generator-version}</version>
        <configuration>
          <generatorName>electrum-jaxrs-server-cdi</generatorName>
          <generateModelTests>true</generateModelTests>
        </configuration>
        <executions>
          <execution>
            <id>generate-neobank-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>src/main/resources/iso20022.swagger.yaml</inputSpec>
              <enablePostProcessFile>true</enablePostProcessFile>
              <configOptions>
                <oneOfAllOfMode>USE_DISCRIMINATORS_OR_DEDUCTION</oneOfAllOfMode>
                <isAsync>true</isAsync>
                <enableRequiresPermissionsAnnotation>true</enableRequiresPermissionsAnnotation>
                <debugSupportingFiles>true</debugSupportingFiles>
                <dateLibrary>java8</dateLibrary>
                <generatePom>false</generatePom>
                <apiPackage>io.electrum.neobank.api.service</apiPackage>
                <modelPackage>io.electrum.neobank.api.model</modelPackage>
                <sourceFolder>/</sourceFolder>
                <useTags>true</useTags>
              </configOptions>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>io.electrum</groupId>
            <artifactId>electrum-openapi-generator</artifactId>
            <version>${electrum-openapi-generator-version}</version>
            <scope>compile</scope>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <id>before-unit-test-execution</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
              <propertyName>argLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>after-unit-test-execution</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>before-integration-test-execution</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
              <propertyName>argLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>after-integration-test-execution</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report
              </outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>merge-unit-and-integration</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}/jacoco-output/</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>create-merged-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
